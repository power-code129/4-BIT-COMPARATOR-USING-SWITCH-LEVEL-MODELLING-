$date
	Thu Apr 17 14:25:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! lt $end
$var wire 1 " gt $end
$var wire 1 # eq $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ! lt $end
$var wire 1 " gt $end
$var wire 4 ( eq_bits [3:0] $end
$var wire 1 ) eq23 $end
$var wire 1 * eq01 $end
$var wire 1 # eq $end
$scope module and1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 * out $end
$upscope $end
$scope module and2 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 ) out $end
$upscope $end
$scope module and3 $end
$var wire 1 * a $end
$var wire 1 ) b $end
$var wire 1 # out $end
$upscope $end
$scope module x0 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 out $end
$upscope $end
$scope module x1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 out $end
$upscope $end
$scope module x2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 out $end
$upscope $end
$scope module x3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1:
09
08
17
06
05
14
03
02
11
00
0/
1.
1-
1,
1+
1*
1)
b1111 (
b0 '
b0 &
b0 %
b0 $
1#
0"
0!
$end
#10000
10
13
16
19
1/
12
15
18
b1111 %
b1111 '
0"
b1111 $
b1111 &
#20000
0#
0*
0)
0,
0.
0+
0-
04
0:
01
b0 (
07
03
09
0/
05
1"
b101 %
b101 '
0!
b1010 $
b1010 &
#30000
1*
1,
1+
1-
14
11
b111 (
17
13
19
1/
15
08
0"
1!
b1111 %
b1111 '
b111 $
b111 &
#40000
0*
0-
0,
1.
07
04
b1001 (
1:
00
06
0/
02
18
1"
0!
b1010 %
b1010 '
b1100 $
b1100 &
#50000
